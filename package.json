{
  "name": "dualpantoframework",
  "version": "0.2.0",
  "description": "dev : Oliver Schneider, Jotaro Shigeyama, Alexander Meißner, Nico Böckhoff, Jonas Bounama, Lukas Wagner, Daniel-Amadeus Johannes Glöckner",
  "main": "lib/dualpantoframework.js",
  "scripts": {
    "install": "npm run build-framework && npm run build-firmware",
    "clean": "npm run clean-framework && npm run clean-firmware",
    "platformio-upload": "make platformio command=upload",
    "build-framework": "npm run build-voice-command && npm run build-serial-plugin && npm run build-serial-standalone && if-env NODE_ENV=production && echo \" production mode \" ||npm run setup-commit-hook",
    "build-voice-command": "node ./voice-command/build/build-release.js",
    "build-serial-plugin": "make serial-plugin",
    "build-serial-standalone": "make serial-standalone",
    "setup-commit-hook": "node ./Utils/CommitHooks/createJsCommitHook.js",
    "clean-framework": "npm run clean-voice-command && npm run clean-serial-plugin && npm run clean-serial-standalone",
    "clean-voice-command": "make delete target=voice-command/.bin",
    "clean-serial-plugin": "make delete target=build",
    "clean-serial-standalone": "echo clean-serial-standalone not implemented yet",
    "build-firmware": "npm run generate-hardware-config && npm run platformio-build",
    "generate-hardware-config": "node Firmware/GenerateHardwareConfig.js barbie",
    "platformio-build": "make platformio command=.",
    "clean-firmware": "npm run platformio-clean && npm run clean-hardware-config",
    "platformio-clean": "make platformio command=clean",
    "clean-hardware-config": "make delete target=Firmware/shared/lib/config.cpp && make delete target=Firmware/shared/include/config.hpp"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/HassoPlattnerInstituteHCI/dualpantoframework.git"
  },
  "author": "jotaro shigeyama",
  "license": "ISC",
  "gypfile": true,
  "bugs": {
    "url": "https://github.com/HassoPlattnerInstituteHCI/dualpantoframework/issues"
  },
  "homepage": "https://github.com/HassoPlattnerInstituteHCI/dualpantoframework#readme",
  "dependencies": {
    "@tweenjs/tween.js": "^17.2.0",
    "co": "^4.6.0",
    "if-env": "^1.0.4",
    "node-gyp": "^3.6.2",
    "node-pid-controller": "^1.0.1",
    "open": "^6.3.0",
    "play-sound": "^1.1.2",
    "polygon-offset": "^0.3.1",
    "say-promise": "0.0.2",
    "serialport": "^6.1.1",
    "usb": "^1.3.1",
    "websocket": "^1.0.26",
    "xml2js": "^0.4.19"
  },
  "devDependencies": {
    "eslint": "^5.15.1",
    "eslint-plugin-jsdoc": "^7.0.2",
    "eslint-config-google": "^0.12.0"
  },
  "eslintConfig": {
    "env": {
      "browser": true,
      "node": true,
      "es6": true
    },
    "plugins": [
      "jsdoc"
    ],
    "extends": "./node_modules/eslint-config-google/index.js",
    "rules": {
      "comma-dangle": [
        "error",
        "never"
      ],
      "linebreak-style": [
        "off",
        "unix"
      ],
      "valid-jsdoc": [
        "off"
      ],
      "jsdoc/check-alignment": "error",
      "jsdoc/check-indentation": "error",
      "jsdoc/check-param-names": "error",
      "jsdoc/check-syntax": "error",
      "jsdoc/check-tag-names": "error",
      "jsdoc/check-types": "error",
      "jsdoc/implements-on-classes": "error",
      "jsdoc/match-description": "error",
      "jsdoc/newline-after-description": "error",
      "jsdoc/no-undefined-types": "error",
      "jsdoc/require-description": [
        "error",
        {
          "contexts": "ClassDeclaration"
        }
      ],
      "jsdoc/require-description-complete-sentence": "error",
      "jsdoc/require-hyphen-before-param-description": "error",
      "jsdoc/require-param": "error",
      "jsdoc/require-param-description": "error",
      "jsdoc/require-param-name": "error",
      "jsdoc/require-param-type": "error",
      "jsdoc/require-returns": "error",
      "jsdoc/require-returns-check": "error",
      "jsdoc/require-returns-description": "error",
      "jsdoc/require-returns-type": "error",
      "jsdoc/valid-types": "error"
    },
    "settings": {
      "jsdoc": {
        "tagNamePreference": {
          "returns": "return"
        }
      }
    }
  }
}
